DROP DATABASE IF EXISTS "schema958";
CREATE DATABASE "schema958";
USE "schema958";
CREATE TABLE "nec_item_library" (
	"id" INTEGER,
	"item_type" TEXT,
	"quality" TEXT,
	"_item_name_necromancy" TEXT,
	"max_stack_size" INTEGER,
	"c3" TEXT,
	"es_hand_r" INTEGER,
	"es_hand_l" INTEGER,
	"es_quiver" INTEGER,
	"es_head" INTEGER,
	"es_body" INTEGER,
	"es_legs" INTEGER,
	"es_arms" INTEGER,
	"es_feet" INTEGER,
	"es_mantle" INTEGER,
	"es_ring" INTEGER,
	"es_earring" INTEGER,
	"es_necklace" INTEGER,
	"es_belt" INTEGER,
	"es_talkring" INTEGER,
	"es_avatar_head" INTEGER,
	"es_avatar_body" INTEGER,
	"es_avatar_legs" INTEGER,
	"es_avatar_arms" INTEGER,
	"es_avatar_feet" INTEGER,
	"es_avatar_mantle" INTEGER,
	"req_hum_m" INTEGER,
	"req_hum_f" INTEGER,
	"req_elf_m" INTEGER,
	"req_elf_f" INTEGER,
	"req_dwf_m" INTEGER,
	"req_dwf_f" INTEGER,
	"req_por_m" INTEGER,
	"req_por_f" INTEGER,
	"req_gnm_m" INTEGER,
	"req_gnm_f" INTEGER,
	"req_fighter" INTEGER,
	"req_thief" INTEGER,
	"req_mage" INTEGER,
	"req_priest" INTEGER,
	"req_lawful" INTEGER,
	"req_neutral" INTEGER,
	"req_chaotic" INTEGER,
	"c40" INTEGER,
	"c41" INTEGER,
	"req_str" INTEGER,
	"req_vit" INTEGER,
	"req_dex" INTEGER,
	"req_agi" INTEGER,
	"req_int" INTEGER,
	"req_pie" INTEGER,
	"req_luk" INTEGER,
	"req_soul_rank" INTEGER,
	"max_soul_rank" INTEGER,
	"req_lvl" INTEGER,
	"c51" TEXT,
	"c52" TEXT,
	"c53" TEXT,
	"phys_slash" INTEGER,
	"phys_strike" INTEGER,
	"phys_pierce" INTEGER,
	"c56" TEXT,
	"pdef_fire" INTEGER,
	"pdef_water" INTEGER,
	"pdef_wind" INTEGER,
	"pdef_earth" INTEGER,
	"pdef_light" INTEGER,
	"pdef_dark" INTEGER,
	"c63" TEXT,
	"c64" TEXT,
	"c65" TEXT,
	"matk_fire" INTEGER,
	"matk_water" INTEGER,
	"matk_wind" INTEGER,
	"matk_earth" INTEGER,
	"matk_light" INTEGER,
	"matk_dark" INTEGER,
	"c72" TEXT,
	"c73" TEXT,
	"c74" TEXT,
	"c75" TEXT,
	"c76" TEXT,
	"seffect_hp" INTEGER,
	"seffect_mp" INTEGER,
	"seffect_str" INTEGER,
	"seffect_vit" INTEGER,
	"seffect_dex" INTEGER,
	"seffect_agi" INTEGER,
	"seffect_int" INTEGER,
	"seffect_pie" INTEGER,
	"seffect_luk" INTEGER,
	"res_poison" INTEGER,
	"res_paralyze" INTEGER,
	"res_petrified" INTEGER,
	"res_faint" INTEGER,
	"res_blind" INTEGER,
	"res_sleep" INTEGER,
	"res_silent" INTEGER,
	"res_charm" INTEGER,
	"res_confusion" INTEGER,
	"res_fear" INTEGER,
	"c96" TEXT,
	"status_malus" TEXT,
	"status_percent" INTEGER,
	"num_of_bag_slots" INTEGER,
	"object_type" TEXT,
	"equip_slot" TEXT,
	"c102" TEXT,
	"c103" TEXT,
	"c104" TEXT,
	"no_use_in_town" INTEGER,
	"no_storage" INTEGER,
	"no_discard" INTEGER,
	"no_sell" INTEGER,
	"no_trade" INTEGER,
	"no_trade_after_used" INTEGER,
	"no_stolen" INTEGER,
	"gold_border" INTEGER,
	"lore" TEXT,
	"icon" INTEGER,
	"field118" TEXT,
	"field119" TEXT,
	"field120" TEXT,
	"field121" TEXT,
	"field122" TEXT,
	"field123" TEXT,
	"field124" TEXT,
	"field125" TEXT,
	"field126" TEXT,
	"field127" TEXT,
	"field128" TEXT,
	"field129" TEXT,
	"field130" TEXT,
	"req_samurai" INTEGER,
	"req_ninja" INTEGER,
	"req_bishop" INTEGER,
	"req_lord" INTEGER,
	"field135" TEXT,
	"field136" TEXT,
	"field137" TEXT,
	"field138" TEXT,
	"field139" TEXT,
	"field140" TEXT,
	"req_clown" INTEGER,
	"req_alchemist" INTEGER,
	"grade" INTEGER,
	"hardness" INTEGER,
	"scroll_id" INTEGER,
	"physical" INTEGER,
	"magical" INTEGER,
	"weight" INTEGER
);

CREATE TABLE "nec_ggate_spawn" (
	"id" INTEGER,
	"serial_id" INTEGER,
	"interaction" INTEGER,
	"name" TEXT,
	"title" TEXT,
	"map_id" INTEGER,
	"x" REAL,
	"y" REAL,
	"z" REAL,
	"heading" INTEGER,
	"model_id" INTEGER,
	"size" INTEGER,
	"active" INTEGER,
	"glow" INTEGER,
	"created" DATETIME,
	"updated" DATETIME
);

CREATE TABLE "nec_map_transition" (
	"id" INTEGER,
	"map_id" INTEGER,
	"transition_map_id" INTEGER,
	"x" REAL,
	"y" REAL,
	"z" REAL,
	"maplink_heading" INTEGER,
	"maplink_color" INTEGER,
	"maplink_offset" INTEGER,
	"maplink_width" INTEGER,
	"distance" INTEGER,
	"left_x" REAL,
	"left_y" REAL,
	"left_z" REAL,
	"right_x" REAL,
	"right_y" REAL,
	"right_z" REAL,
	"invertedpos" INTEGER,
	"to_x" REAL,
	"to_y" REAL,
	"to_z" REAL,
	"to_heading" INTEGER,
	"state" INTEGER,
	"created" DATETIME,
	"updated" DATETIME,
	 PRIMARY KEY ("id")
);

CREATE TABLE "nec_gimmick_spawn" (
	"id" INTEGER,
	"map_id" INTEGER,
	"x" INTEGER,
	"y" INTEGER,
	"z" INTEGER,
	"heading" INTEGER,
	"model_id" INTEGER,
	"state" INTEGER,
	"created" DATETIME,
	"updated" DATETIME,
	 PRIMARY KEY ("id")
);

CREATE TABLE "nec_union_news" (
	"id" INTEGER,
	"character_soul_name" STRING,
	"character_name" STRING,
	"activity" INTEGER,
	"string3" STRING,
	"string4" STRING,
	"itemcount" INTEGER
);

CREATE TABLE "nec_union_member" (
	"id" INTEGER,
	"union_id" INTEGER,
	"character_id" INTEGER,
	"member_priviledge_bitmask" INTEGER,
	"rank" INTEGER,
	"joined" DATETIME,
	 PRIMARY KEY ("id")
);

CREATE TABLE "nec_monster_coords" (
	"id" INTEGER,
	"monster_id" INTEGER,
	"map_id" INTEGER,
	"coord_idx" INTEGER,
	"x" REAL,
	"y" REAL,
	"z" REAL
);

CREATE TABLE "nec_skilltree_item" (
	"id" INTEGER,
	"skill_id" INTEGER,
	"char_id" INTEGER,
	"level" INTEGER
);

CREATE TABLE "nec_monster_spawn" (
	"id" INTEGER,
	"monster_id" INTEGER,
	"model_id" INTEGER,
	"level" INTEGER,
	"name" TEXT,
	"title" TEXT,
	"map_id" INTEGER,
	"x" REAL,
	"y" REAL,
	"z" REAL,
	"active" INTEGER,
	"heading" INTEGER,
	"size" INTEGER,
	"created" DATETIME,
	"updated" DATETIME,
	 PRIMARY KEY ("id")
);

CREATE TABLE "nec_npc_spawn" (
	"id" INTEGER,
	"npc_id" INTEGER,
	"model_id" INTEGER,
	"level" INTEGER,
	"name" TEXT,
	"title" TEXT,
	"map_id" INTEGER,
	"x" REAL,
	"y" REAL,
	"z" REAL,
	"active" INTEGER,
	"heading" INTEGER,
	"size" INTEGER,
	"visibility" INTEGER,
	"created" DATETIME,
	"updated" DATETIME,
	"icon" INTEGER,
	"status" INTEGER,
	"status_x" INTEGER,
	"status_y" INTEGER,
	"status_z" INTEGER,
	 PRIMARY KEY ("id")
);

CREATE TABLE "nec_map" (
	"id" INTEGER,
	"country" TEXT,
	"area" TEXT,
	"place" TEXT,
	"x" INTEGER,
	"y" INTEGER,
	"z" INTEGER,
	"orientation" INTEGER,
	 PRIMARY KEY ("id")
);

CREATE TABLE "account" (
	"id" INTEGER,
	"name" TEXT,
	"normal_name" TEXT,
	"hash" TEXT,
	"mail" TEXT,
	"mail_verified" INTEGER,
	"mail_verified_at" DATETIME,
	"mail_token" TEXT,
	"password_token" TEXT,
	"state" INTEGER,
	"last_login" DATETIME,
	"created" DATETIME,
	 PRIMARY KEY ("mail")
);

CREATE TABLE "nec_soul" (
	"id" INTEGER,
	"account_id" INTEGER,
	"name" TEXT,
	"level" INTEGER,
	"created" DATETIME,
	"password" TEXT,
	"experience_current" INTEGER,
	"warehouse_gold" INTEGER,
	"points_lawful" INTEGER,
	"points_neutral" INTEGER,
	"points_chaos" INTEGER,
	"criminal_level" INTEGER,
	"points_current" INTEGER,
	"material_life" INTEGER,
	"material_reincarnation" INTEGER,
	"material_lawful" INTEGER,
	"material_chaos" INTEGER,
	 PRIMARY KEY ("name"),
	 CONSTRAINT "fk_nec_soul_account_id" FOREIGN KEY ("account_id") REFERENCES "account" ("id")
);

CREATE TABLE "nec_friend_list" (
	"id" INTEGER,
	"soul_id" INTEGER,
	"friend_soul_id" INTEGER,
	 PRIMARY KEY ("id"),
	 CONSTRAINT "fkeycon_nec_friend_list_to_nec_soul" FOREIGN KEY ("friend_soul_id") REFERENCES "nec_soul" ("id")
);

CREATE TABLE "nec_black_list" (
	"id" INTEGER,
	"soul_id" INTEGER,
	"black_soul_id" INTEGER,
	 PRIMARY KEY ("id"),
	 CONSTRAINT "fkeycon_nec_black_list_to_nec_soul" FOREIGN KEY ("soul_id") REFERENCES "nec_soul" ("id")
);

CREATE TABLE "nec_block_list" (
	"id" INTEGER,
	"soul_id" INTEGER,
	"block_soul_id" INTEGER,
	 PRIMARY KEY ("id"),
	 CONSTRAINT "fkeycon_nec_block_list_to_nec_soul" FOREIGN KEY ("block_soul_id") REFERENCES "nec_soul" ("id")
);

CREATE TABLE "nec_character" (
	"id" INTEGER,
	"account_id" INTEGER,
	"soul_id" INTEGER,
	"slot" INTEGER,
	"map_id" INTEGER,
	"x" REAL,
	"y" REAL,
	"z" REAL,
	"name" TEXT,
	"race_id" INTEGER,
	"sex_id" INTEGER,
	"hair_id" INTEGER,
	"hair_color_id" INTEGER,
	"face_id" INTEGER,
	"strength" INTEGER,
	"vitality" INTEGER,
	"dexterity" INTEGER,
	"agility" INTEGER,
	"intelligence" INTEGER,
	"piety" INTEGER,
	"luck" INTEGER,
	"class_id" INTEGER,
	"level" INTEGER,
	"created" DATETIME,
	"hp_current" INTEGER,
	"mp_current" INTEGER,
	"gold" INTEGER,
	"condition_current" INTEGER,
	"channel" INTEGER,
	"face_arrange_id" INTEGER,
	"voice_id" INTEGER,
	"experience_current" INTEGER,
	"skill_points" INTEGER,
	 PRIMARY KEY ("soul_id","slot"),
	 CONSTRAINT "fk_nec_character_map_id" FOREIGN KEY ("map_id") REFERENCES "nec_map" ("id"),
	 CONSTRAINT "fk_nec_character_soul_id" FOREIGN KEY ("soul_id") REFERENCES "nec_soul" ("id"),
	 CONSTRAINT "fk_nec_character_account_id" FOREIGN KEY ("account_id") REFERENCES "account" ("id")
);

CREATE TABLE "nec_item_instance" (
	"id" INTEGER,
	"owner_id" INTEGER,
	"zone" INTEGER,
	"container" INTEGER,
	"slot" INTEGER,
	"base_id" INTEGER,
	"quantity" INTEGER,
	"statuses" INTEGER,
	"current_equip_slot" INTEGER,
	"current_durability" INTEGER,
	"plus_maximum_durability" INTEGER,
	"enhancement_level" INTEGER,
	"special_forge_level" INTEGER,
	"plus_physical" INTEGER,
	"plus_magical" INTEGER,
	"plus_hardness" INTEGER,
	"gem_slot_1_type" INTEGER,
	"gem_slot_2_type" INTEGER,
	"gem_slot_3_type" INTEGER,
	"gem_id_slot_1" INTEGER,
	"gem_id_slot_2" INTEGER,
	"gem_id_slot_3" INTEGER,
	"enchant_id" INTEGER,
	"plus_gp" INTEGER,
	"plus_weight" INTEGER,
	"plus_ranged_eff" INTEGER,
	"plus_reservoir_eff" INTEGER,
	"consigner_soul_name" TEXT,
	"winner_soul_id" INTEGER,
	"expiry_datetime" INTEGER,
	"min_bid" INTEGER,
	"buyout_price" INTEGER,
	"comment" TEXT,
	 PRIMARY KEY ("id"),
	 CONSTRAINT "fkeycon_nec_item_instance_to_nec_item_library" FOREIGN KEY ("base_id") REFERENCES "nec_item_library" ("id"),
	 CONSTRAINT "fkeycon_nec_item_instance_to_nec_character" FOREIGN KEY ("owner_id") REFERENCES "nec_character" ("id"),
	 CONSTRAINT "fkeycon_nec_item_instance_to_nec_soul" FOREIGN KEY ("winner_soul_id") REFERENCES "nec_soul" ("id")
);

CREATE TABLE "nec_auction_bids" (
	"item_instance_id" INTEGER,
	"bidder_soul_id" INTEGER,
	"current_bid" INTEGER,
	 PRIMARY KEY ("item_instance_id","bidder_soul_id"),
	 CONSTRAINT "fkeycon_nec_auction_bids_to_nec_soul" FOREIGN KEY ("bidder_soul_id") REFERENCES "nec_soul" ("id"),
	 CONSTRAINT "fkeycon_nec_auction_bids_to_nec_item_instance" FOREIGN KEY ("item_instance_id") REFERENCES "nec_item_instance" ("id")
);

CREATE TABLE "nec_union" (
	"id" INTEGER,
	"name" TEXT,
	"leader_character_id" INTEGER,
	"subleader1_character_id" INTEGER,
	"subleader2_character_id" INTEGER,
	"level" INTEGER,
	"current_exp" INTEGER,
	"next_level_exp" INTEGER,
	"member_limit_increase" INTEGER,
	"cape_design_id" INTEGER,
	"union_news" TEXT,
	"created" DATETIME,
	 CONSTRAINT "fk_nec_union_leader_character_id" FOREIGN KEY ("leader_character_id") REFERENCES "nec_character" ("id")
);

CREATE TABLE "nec_shortcut_bar" (
	"character_id" INTEGER,
	"bar_num" INTEGER,
	"slot_num" INTEGER,
	"shortcut_type" INTEGER,
	"shortcut_id" INTEGER,
	 PRIMARY KEY ("character_id","bar_num","slot_num"),
	 CONSTRAINT "fkeycon_nec_shortcut_bar_to_nec_character" FOREIGN KEY ("character_id") REFERENCES "nec_character" ("id")
);

CREATE TABLE "setting" (
	"key" TEXT,
	"value" TEXT,
	 PRIMARY KEY ("key")
);
